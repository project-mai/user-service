/*
 * This file is generated by jOOQ.
 */
package ru.mai.user.jooq.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import ru.mai.user.jooq.tables.User


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserRecord() : UpdatableRecordImpl<UserRecord>(User.USER) {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var name: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var password: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var email: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    /**
     * Create a detached, initialised UserRecord
     */
    constructor(id: Long? = null, name: String? = null, password: String? = null, email: String? = null): this() {
        this.id = id
        this.name = name
        this.password = password
        this.email = email
        resetChangedOnNotNull()
    }

    /**
     * Create a detached, initialised UserRecord
     */
    constructor(value: ru.mai.user.jooq.tables.pojos.User?): this() {
        if (value != null) {
            this.id = value.id
            this.name = value.name
            this.password = value.password
            this.email = value.email
            resetChangedOnNotNull()
        }
    }
}
